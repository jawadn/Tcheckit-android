package com.tcheckit.wsdl;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 2/21/2014 7:29:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import java.util.Hashtable;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import com.tcheckit.wsdl.WS_Enums.answerStatusEnum;
import com.tcheckit.wsdl.WS_Enums.flag;

public class answer implements KvmSerializable {
    
    public long id;
    public boolean idSpecified;
    public float latitude;
    public boolean latitudeSpecified;
    public Vectormedia listPhotos;
    public VectorresponseQuestion listResponse;
    public float longitude;
    public boolean longitudeSpecified;
    public consumer oneConsumer;
    public mission oneMission;
    public String oneRefusedComment;
    public sign oneSign;
    public answerStatusEnum oneStatus;
    public boolean oneStatusSpecified;
    public String dateCreated;
    public boolean dateCreatedSpecified;
    public String dateDeleted;
    public boolean dateDeletedSpecified;
    public String dateUpdated;
    public boolean dateUpdatedSpecified;
    public flag oneFlag;
    public boolean oneFlagSpecified;
    
    public answer(){}
    
    public answer(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("id"))
        {
            Object obj = soapObject.getProperty("id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("idSpecified"))
        {
            Object obj = soapObject.getProperty("idSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("latitude"))
        {
            Object obj = soapObject.getProperty("latitude");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                latitude = Float.parseFloat(j.toString());
            }else if (obj!= null && obj instanceof Number){
                latitude = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("latitudeSpecified"))
        {
            Object obj = soapObject.getProperty("latitudeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                latitudeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                latitudeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("listPhotos"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("listPhotos");
            listPhotos = new Vectormedia(j);
        }
        if (soapObject.hasProperty("listResponse"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("listResponse");
            listResponse = new VectorresponseQuestion(j);
        }
        if (soapObject.hasProperty("longitude"))
        {
            Object obj = soapObject.getProperty("longitude");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                longitude = Float.parseFloat(j.toString());
            }else if (obj!= null && obj instanceof Number){
                longitude = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("longitudeSpecified"))
        {
            Object obj = soapObject.getProperty("longitudeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                longitudeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                longitudeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("oneConsumer"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("oneConsumer");
            oneConsumer =  new consumer (j);
            
        }
        if (soapObject.hasProperty("oneMission"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("oneMission");
            oneMission =  new mission (j);
            
        }
        if (soapObject.hasProperty("oneRefusedComment"))
        {
            Object obj = soapObject.getProperty("oneRefusedComment");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                oneRefusedComment = j.toString();
            }else if (obj!= null && obj instanceof String){
                oneRefusedComment = (String) obj;
            }
        }
        if (soapObject.hasProperty("oneSign"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("oneSign");
            oneSign =  new sign (j);
            
        }
        if (soapObject.hasProperty("oneStatus"))
        {
            Object obj = soapObject.getProperty("oneStatus");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                oneStatus = answerStatusEnum.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("oneStatusSpecified"))
        {
            Object obj = soapObject.getProperty("oneStatusSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                oneStatusSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                oneStatusSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("dateCreated"))
        {
            Object obj = soapObject.getProperty("dateCreated");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                dateCreated = j.toString();
            }else if (obj!= null && obj instanceof String){
                dateCreated = (String) obj;
            }
        }
        if (soapObject.hasProperty("dateCreatedSpecified"))
        {
            Object obj = soapObject.getProperty("dateCreatedSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                dateCreatedSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                dateCreatedSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("dateDeleted"))
        {
            Object obj = soapObject.getProperty("dateDeleted");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                dateDeleted = j.toString();
            }else if (obj!= null && obj instanceof String){
                dateDeleted = (String) obj;
            }
        }
        if (soapObject.hasProperty("dateDeletedSpecified"))
        {
            Object obj = soapObject.getProperty("dateDeletedSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                dateDeletedSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                dateDeletedSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("dateUpdated"))
        {
            Object obj = soapObject.getProperty("dateUpdated");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                dateUpdated = j.toString();
            }else if (obj!= null && obj instanceof String){
                dateUpdated = (String) obj;
            }
        }
        if (soapObject.hasProperty("dateUpdatedSpecified"))
        {
            Object obj = soapObject.getProperty("dateUpdatedSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                dateUpdatedSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                dateUpdatedSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("oneFlag"))
        {
            Object obj = soapObject.getProperty("oneFlag");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                oneFlag = flag.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("oneFlagSpecified"))
        {
            Object obj = soapObject.getProperty("oneFlagSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                oneFlagSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                oneFlagSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return id;
            case 1:
                return idSpecified;
            case 2:
                return latitude;
            case 3:
                return latitudeSpecified;
            case 4:
                return listPhotos;
            case 5:
                return listResponse;
            case 6:
                return longitude;
            case 7:
                return longitudeSpecified;
            case 8:
                return oneConsumer;
            case 9:
                return oneMission;
            case 10:
                return oneRefusedComment;
            case 11:
                return oneSign;
            case 12:
                return oneStatus.toString();
            case 13:
                return oneStatusSpecified;
            case 14:
                return dateCreated;
            case 15:
                return dateCreatedSpecified;
            case 16:
                return dateDeleted;
            case 17:
                return dateDeletedSpecified;
            case 18:
                return dateUpdated;
            case 19:
                return dateUpdatedSpecified;
            case 20:
                return oneFlag.toString();
            case 21:
                return oneFlagSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 22;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = Long.class;
                info.name = "id";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "idSpecified";
                break;
            case 2:
                info.type = Float.class;
                info.name = "latitude";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "latitudeSpecified";
                break;
            case 4:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "listPhotos";
                break;
            case 5:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "listResponse";
                break;
            case 6:
                info.type = Float.class;
                info.name = "longitude";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "longitudeSpecified";
                break;
            case 8:
                info.type = consumer.class;
                info.name = "oneConsumer";
                break;
            case 9:
                info.type = mission.class;
                info.name = "oneMission";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "oneRefusedComment";
                break;
            case 11:
                info.type = sign.class;
                info.name = "oneSign";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "oneStatus";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "oneStatusSpecified";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dateCreated";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "dateCreatedSpecified";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dateDeleted";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "dateDeletedSpecified";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dateUpdated";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "dateUpdatedSpecified";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "oneFlag";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "oneFlagSpecified";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
